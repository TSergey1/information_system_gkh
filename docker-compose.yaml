version: '3.10'

services:
  db:
    image: postgres:16.1-alpine
    container_name: db
    env_file: .env
    ports:
      - 5432:5432
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
        interval: 5s
        timeout: 5s
        retries: 15
 
  web:
    build: ./information_system_gkh/
    container_name: django
    command: python manage.py runserver  0.0.0.0:8000
    ports:
      - 8000:8000
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  migrate:
    build: ./information_system_gkh/
    container_name: django_migrate
    command: python manage.py migrate
    env_file: .env
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:7.0.5-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'

  task_worker:
    build: ./information_system_gkh/
    container_name: task_worker
    entrypoint: celery
    command: -A information_system_gkh.celery.app worker --loglevel=DEBUG
    restart: always
    links:
      - redis
    env_file:
      - .env
    depends_on:
      - redis
      - web

  flower:
    container_name: flower
    build: ./information_system_gkh/
    entrypoint: celery
    command: -A information_system_gkh.celery.app flower
    restart: always
    links:
      - redis
    env_file:
      - .env
    depends_on:
      - task_worker
      - redis
    ports:
      - '5555:5555'

volumes:
  pg_data: